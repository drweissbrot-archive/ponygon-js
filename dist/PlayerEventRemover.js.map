{"version":3,"sources":["../src/PlayerEventRemover.ts"],"names":["PlayerEventRemover","constructor","player","event","handler","removeOnceResolved","once","off"],"mappings":";;;;;;;AAEe,MAAMA,kBAAN,CAAyB;AAOhCC,EAAAA,WAAP,CAAmBC,MAAnB,EAAmCC,KAAnC,EAAkDC,OAAlD,EAAiE;AAChE,SAAKF,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA;;AAEMC,EAAAA,kBAAP,GAAmC;AAClC,SAAKH,MAAL,CAAYI,IAAZ,CAAiB,KAAKH,KAAtB,EAA6B,MAAM;AAClC,WAAKD,MAAL,CAAYK,GAAZ,CAAgB,KAAKJ,KAArB,EAA4B,KAAKC,OAAjC;AACA,KAFD;AAIA,WAAO,IAAP;AACA,GAnBsC,CAqBvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA/BuC","sourcesContent":["import Player from './Player'\n\nexport default class PlayerEventRemover {\n\tprotected player: Player\n\n\tprotected event: string\n\n\tprotected handler: any\n\n\tpublic constructor(player: Player, event: string, handler?: any) {\n\t\tthis.player = player\n\t\tthis.event = event\n\t\tthis.handler = handler\n\t}\n\n\tpublic removeOnceResolved() : this {\n\t\tthis.player.once(this.event, () => {\n\t\t\tthis.player.off(this.event, this.handler)\n\t\t})\n\n\t\treturn this\n\t}\n\n\t// TODO\n\t// public forceResolve(afterSeconds: number, handler?: () => any) : this {\n\t// \tsetTimeout(afterSeconds / 1000, () => {\n\t// \t\t// TODO\n\t// \t\t// if (! eventResolved) {\n\t// \t\t// \thandler()\n\t// \t\t// }\n\t// \t})\n\t//\n\t// \treturn this\n\t// }\n}\n"],"file":"PlayerEventRemover.js"}
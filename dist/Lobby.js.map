{"version":3,"sources":["../src/Lobby.ts"],"names":["Lobby","constructor","id","leader","players","lobby","allPlayers","map","player","forPublic","addPlayer","some","compare","push","emitPlayers","emit","name","event","data","socket","isEmpty","length","startGame","className","GameList","base","game"],"mappings":";;;;;;;AAAA;;AAIA;;;;AAEe,MAAMA,KAAN,CAAY;AASnBC,EAAAA,WAAP,CAAmBC,EAAnB,EAAuBC,MAAvB,EAA+B;AAC9B,SAAKD,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,OAAL,GAAe,CAAED,MAAF,CAAf;AAEAA,IAAAA,MAAM,CAACE,KAAP,GAAe,IAAf;AAEA,uBAAK,IAAL,EAAW,KAAKH,EAAhB;AACA;;AAED,MAAWI,UAAX,GAAmC;AAClC,WAAO,KAAKF,OAAL,CAAaG,GAAb,CAAkBC,MAAD,IAAYA,MAAM,CAACC,SAApC,CAAP;AACA;;AAEMC,EAAAA,SAAP,CAAiBF,MAAjB,EAAwC;AACvC,QAAI,KAAKJ,OAAL,CAAaO,IAAb,CAAmBC,OAAD,IAAaA,OAAO,KAAKJ,MAA3C,CAAJ,EAAwD,OAAO,IAAP;AAExD,SAAKJ,OAAL,CAAaS,IAAb,CAAkBL,MAAlB;AAEAA,IAAAA,MAAM,CAACH,KAAP,GAAe,IAAf;AAEA,SAAKS,WAAL;AACA,SAAKC,IAAL,CAAU,aAAV,EAAyB;AAAEC,MAAAA,IAAI,EAAER,MAAM,CAACQ;AAAf,KAAzB;AAEA,WAAO,IAAP;AACA;;AAEMD,EAAAA,IAAP,CAAYE,KAAZ,EAA2BC,IAA3B,EAA8C;AAC7C,SAAK,MAAMV,MAAX,IAAqB,KAAKJ,OAA1B,EAAmC;AAClCI,MAAAA,MAAM,CAACW,MAAP,CAAcJ,IAAd,CAAmBE,KAAnB,EAA0BC,IAA1B;AACA;;AAED,WAAO,IAAP;AACA;;AAEMJ,EAAAA,WAAP,GAA4B;AAC3B,SAAKC,IAAL,CAAU,SAAV,EAAqB;AAAEX,MAAAA,OAAO,EAAE,KAAKE;AAAhB,KAArB;AAEA,WAAO,IAAP;AACA;;AAEMc,EAAAA,OAAP,GAA2B;AAC1B,WAAO,KAAKhB,OAAL,CAAaiB,MAAb,GAAsB,CAA7B;AACA;;AAEMC,EAAAA,SAAP,CAAiBN,IAAjB,EAAsC;AACrC,UAAMO,SAAS,GAAGC,cAASR,IAAT,EAAeS,IAAjC;AAEA,SAAKC,IAAL,GAAY,IAAIH,SAAJ,CAAc,IAAd,CAAZ;AAEA,WAAO,IAAP;AACA;;AA5DyB","sourcesContent":["import GameList from './Games/List'\nimport Game from './Games/Game'\nimport Player from './Player'\n\nimport { info } from 'helpers'\n\nexport default class Lobby {\n\tpublic id: string\n\n\tpublic leader: Player\n\n\tpublic players: Player[]\n\n\tpublic game?: Game\n\n\tpublic constructor(id, leader) {\n\t\tthis.id = id\n\t\tthis.leader = leader\n\t\tthis.players = [ leader ]\n\n\t\tleader.lobby = this\n\n\t\tinfo('L+', this.id)\n\t}\n\n\tpublic get allPlayers() : object[] {\n\t\treturn this.players.map((player) => player.forPublic)\n\t}\n\n\tpublic addPlayer(player: Player) : this {\n\t\tif (this.players.some((compare) => compare === player)) return this\n\n\t\tthis.players.push(player)\n\n\t\tplayer.lobby = this\n\n\t\tthis.emitPlayers()\n\t\tthis.emit('user joined', { name: player.name })\n\n\t\treturn this\n\t}\n\n\tpublic emit(event: string, data?: any) : this {\n\t\tfor (const player of this.players) {\n\t\t\tplayer.socket.emit(event, data)\n\t\t}\n\n\t\treturn this\n\t}\n\n\tpublic emitPlayers() : this {\n\t\tthis.emit('players', { players: this.allPlayers })\n\n\t\treturn this\n\t}\n\n\tpublic isEmpty() : boolean {\n\t\treturn this.players.length > 0\n\t}\n\n\tpublic startGame(name: string) : this {\n\t\tconst className = GameList[name].base\n\n\t\tthis.game = new className(this)\n\n\t\treturn this\n\t}\n}\n"],"file":"Lobby.js"}